(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{1330:function(n,a,s){n.exports={useDebounce:s(1603)}},1603:function(n,a,s){n.exports={content:[["p","配合 ",["code","useEffect"]," ，监听 ",["code","input"]," 输入值的变化。"]],meta:{category:"组件",cols:1,type:"hook",title:"useDebounce",subtitle:"防抖",filename:"components/use-debounce/demo/useDebounce.md",id:"components-use-debounce-demo-useDebounce"},toc:["ul"],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Table<span class="token punctuation">,</span> Input<span class="token punctuation">,</span> Icon<span class="token punctuation">,</span> Row<span class="token punctuation">,</span> Col<span class="token punctuation">,</span> Button <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> useDebounce <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'dantdv3\'</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> listUrl <span class="token operator">=</span> <span class="token string">\'https://easy-mock.com/mock/5f7e96fbf9d9bd19dca629b0/dantd/list\'</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'标题\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'title\'</span><span class="token punctuation">,</span>\n    commonSearch<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'缩略图\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'image\'</span><span class="token punctuation">,</span>\n    render<span class="token punctuation">:</span> <span class="token punctuation">(</span>text<span class="token punctuation">,</span> record<span class="token punctuation">,</span> index<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n        <span class="token punctuation">{</span>record<span class="token punctuation">.</span>thumbnail_pic_s <span class="token operator">?</span> <span class="token punctuation">(</span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> maxHeight<span class="token punctuation">:</span> <span class="token number">40</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token attr-name">src</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>record<span class="token punctuation">.</span>thumbnail_pic_s<span class="token punctuation">}</span></span> <span class="token attr-name">alt</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>record<span class="token punctuation">.</span>title<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n        <span class="token punctuation">)</span> <span class="token punctuation">:</span> <span class="token punctuation">(</span>\n          <span class="token string">\'暂无图片\'</span>\n        <span class="token punctuation">)</span><span class="token punctuation">}</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'分类\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'category\'</span><span class="token punctuation">,</span>\n    commonFilter<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'作者\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'author_name\'</span><span class="token punctuation">,</span>\n    commonFilter<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    title<span class="token punctuation">:</span> <span class="token string">\'发布日期\'</span><span class="token punctuation">,</span>\n    dataIndex<span class="token punctuation">:</span> <span class="token string">\'date\'</span><span class="token punctuation">,</span>\n    commonSorter<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> BasicExample<span class="token punctuation">:</span> React<span class="token punctuation">.</span>FC <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">[</span>dataSource<span class="token punctuation">,</span> setDataSource<span class="token punctuation">]</span> <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> <span class="token punctuation">[</span>loading<span class="token punctuation">,</span> setLoading<span class="token punctuation">]</span> <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> <span class="token punctuation">[</span>searchQuery<span class="token punctuation">,</span> setSearchQuery<span class="token punctuation">]</span> <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> debouncedSearchQuery <span class="token operator">=</span> <span class="token function">useDebounce</span><span class="token punctuation">(</span>searchQuery<span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    React<span class="token punctuation">.</span><span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n      <span class="token function">fetchData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n\n    React<span class="token punctuation">.</span><span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> fetchParams <span class="token operator">=</span> <span class="token punctuation">{</span>\n            title<span class="token punctuation">:</span> debouncedSearchQuery\n        <span class="token punctuation">}</span>\n\n        <span class="token function">fetchData</span><span class="token punctuation">(</span>fetchParams<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment" spellcheck="true">// eslint-disable-next-line react-hooks/exhaustive-deps</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>debouncedSearchQuery<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">fetchData</span><span class="token punctuation">(</span>fetchParams <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">let</span> url <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">URL</span><span class="token punctuation">(</span>listUrl<span class="token punctuation">)</span> <span class="token keyword">as</span> any<span class="token punctuation">;</span>\n        url<span class="token punctuation">.</span>search <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">URLSearchParams</span><span class="token punctuation">(</span>fetchParams<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token function">setLoading</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        res\n        <span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span>res <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n            <span class="token function">setDataSource</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token function">setLoading</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token keyword">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n            <span class="token function">setLoading</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">const</span> handleSearchChange <span class="token operator">=</span> e <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> query <span class="token operator">=</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">;</span>\n        <span class="token function">setSearchQuery</span><span class="token punctuation">(</span>query<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Input</span>\n                <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>width<span class="token punctuation">:</span> <span class="token string">\'100%\'</span><span class="token punctuation">,</span> marginBottom<span class="token punctuation">:</span> <span class="token number">10</span><span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n                <span class="token attr-name">allowClear</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">true</span><span class="token punctuation">}</span></span>\n                <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>searchQuery<span class="token punctuation">}</span></span>\n                <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>handleSearchChange<span class="token punctuation">}</span></span>\n                <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>模糊搜索表格内容(多个关键词请用空格分隔。如：key1</span> <span class="token attr-name">key2)"</span>\n            <span class="token punctuation">/></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Table</span>\n                <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span>\n                <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>dataSource<span class="token punctuation">}</span></span>\n            <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>BasicExample</span> <span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>\n  mountNode<span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],highlightedCodes:{jsx:'<span class="token keyword">import</span> <span class="token punctuation">{</span> Table<span class="token punctuation">,</span> Input<span class="token punctuation">,</span> Icon<span class="token punctuation">,</span> Row<span class="token punctuation">,</span> Col<span class="token punctuation">,</span> Button <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> useDebounce <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'dantdv3\'</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> listUrl <span class="token operator">=</span> <span class="token string">\'https://easy-mock.com/mock/5f7e96fbf9d9bd19dca629b0/dantd/list\'</span><span class="token punctuation">;</span>\n<span class="token keyword">const</span> columns <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token punctuation">{</span>\n    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'标题\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">\'title\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">commonSearch</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'缩略图\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">\'image\'</span><span class="token punctuation">,</span>\n    <span class="token function-variable function">render</span><span class="token operator">:</span> <span class="token punctuation">(</span><span class="token parameter">text<span class="token punctuation">,</span> record<span class="token punctuation">,</span> index</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n        <span class="token punctuation">{</span>record<span class="token punctuation">.</span>thumbnail_pic_s <span class="token operator">?</span> <span class="token punctuation">(</span>\n          <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token literal-property property">maxHeight</span><span class="token operator">:</span> <span class="token number">40</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token attr-name">src</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>record<span class="token punctuation">.</span>thumbnail_pic_s<span class="token punctuation">}</span></span> <span class="token attr-name">alt</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>record<span class="token punctuation">.</span>title<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n        <span class="token punctuation">)</span> <span class="token operator">:</span> <span class="token punctuation">(</span>\n          <span class="token string">\'暂无图片\'</span>\n        <span class="token punctuation">)</span><span class="token punctuation">}</span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'分类\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">\'category\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">commonFilter</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'作者\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">\'author_name\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">commonFilter</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span>\n    <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'发布日期\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">dataIndex</span><span class="token operator">:</span> <span class="token string">\'date\'</span><span class="token punctuation">,</span>\n    <span class="token literal-property property">commonSorter</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token literal-property property">BasicExample</span><span class="token operator">:</span> React<span class="token punctuation">.</span><span class="token function-variable function">FC</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">[</span>dataSource<span class="token punctuation">,</span> setDataSource<span class="token punctuation">]</span> <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> <span class="token punctuation">[</span>loading<span class="token punctuation">,</span> setLoading<span class="token punctuation">]</span> <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useState</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> <span class="token punctuation">[</span>searchQuery<span class="token punctuation">,</span> setSearchQuery<span class="token punctuation">]</span> <span class="token operator">=</span> React<span class="token punctuation">.</span><span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token keyword">const</span> debouncedSearchQuery <span class="token operator">=</span> <span class="token function">useDebounce</span><span class="token punctuation">(</span>searchQuery<span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    React<span class="token punctuation">.</span><span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token function">fetchData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n\n    React<span class="token punctuation">.</span><span class="token function">useEffect</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> fetchParams <span class="token operator">=</span> <span class="token punctuation">{</span>\n            <span class="token literal-property property">title</span><span class="token operator">:</span> debouncedSearchQuery\n        <span class="token punctuation">}</span>\n\n        <span class="token function">fetchData</span><span class="token punctuation">(</span>fetchParams<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token comment">// eslint-disable-next-line react-hooks/exhaustive-deps</span>\n    <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>debouncedSearchQuery<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">async</span> <span class="token keyword">function</span> <span class="token function">fetchData</span><span class="token punctuation">(</span><span class="token parameter">fetchParams <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token punctuation">}</span></span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">let</span> url <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">URL</span><span class="token punctuation">(</span>listUrl<span class="token punctuation">)</span> <span class="token keyword">as</span> any<span class="token punctuation">;</span>\n        url<span class="token punctuation">.</span>search <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">URLSearchParams</span><span class="token punctuation">(</span>fetchParams<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token function">setLoading</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token keyword">const</span> res <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">fetch</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>\n        res\n        <span class="token punctuation">.</span><span class="token function">json</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">res</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token function">setDataSource</span><span class="token punctuation">(</span>res<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>\n            <span class="token function">setLoading</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span>\n        <span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n            <span class="token function">setLoading</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n        <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span>\n\n    <span class="token keyword">const</span> <span class="token function-variable function">handleSearchChange</span> <span class="token operator">=</span> <span class="token parameter">e</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n        <span class="token keyword">const</span> query <span class="token operator">=</span> e<span class="token punctuation">.</span>target<span class="token punctuation">.</span>value<span class="token punctuation">;</span>\n        <span class="token function">setSearchQuery</span><span class="token punctuation">(</span>query<span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">;</span>\n\n    <span class="token keyword">return</span> <span class="token punctuation">(</span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Input</span></span>\n                <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span><span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token string">\'100%\'</span><span class="token punctuation">,</span> <span class="token literal-property property">marginBottom</span><span class="token operator">:</span> <span class="token number">10</span><span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n                <span class="token attr-name">allowClear</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token boolean">true</span><span class="token punctuation">}</span></span>\n                <span class="token attr-name">value</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>searchQuery<span class="token punctuation">}</span></span>\n                <span class="token attr-name">onChange</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleSearchChange<span class="token punctuation">}</span></span>\n                <span class="token attr-name">placeholder</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>模糊搜索表格内容(多个关键词请用空格分隔。如：key1 key2)<span class="token punctuation">"</span></span>\n            <span class="token punctuation">/></span></span>\n            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span>\n                <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>columns<span class="token punctuation">}</span></span>\n                <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>dataSource<span class="token punctuation">}</span></span>\n            <span class="token punctuation">/></span></span>\n        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n    <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span><span class="token punctuation">></span></span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">BasicExample</span></span> <span class="token punctuation">/></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span><span class="token punctuation">,</span>\n  mountNode<span class="token punctuation">,</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>'},preview:function(){var n=s(0);s(6);function a(n){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}var t=s(124),p=s(1346);function o(){"use strict";/*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */o=function(){return n};var n={},s=Object.prototype,t=s.hasOwnProperty,p=Object.defineProperty||function(n,a,s){n[a]=s.value},e="function"==typeof Symbol?Symbol:{},c=e.iterator||"@@iterator",u=e.asyncIterator||"@@asyncIterator",l=e.toStringTag||"@@toStringTag";function r(n,a,s){return Object.defineProperty(n,a,{value:s,enumerable:!0,configurable:!0,writable:!0}),n[a]}try{r({},"")}catch(n){r=function(n,a,s){return n[a]=s}}function i(n,a,s,t){var o=a&&a.prototype instanceof f?a:f,e=Object.create(o.prototype),c=new _(t||[]);return p(e,"_invoke",{value:S(n,s,c)}),e}function k(n,a,s){try{return{type:"normal",arg:n.call(a,s)}}catch(n){return{type:"throw",arg:n}}}n.wrap=i;var d={};function f(){}function h(){}function y(){}var g={};r(g,c,(function(){return this}));var m=Object.getPrototypeOf,v=m&&m(m(I([])));v&&v!==s&&t.call(v,c)&&(g=v);var w=y.prototype=f.prototype=Object.create(g);function b(n){["next","throw","return"].forEach((function(a){r(n,a,(function(n){return this._invoke(a,n)}))}))}function x(n,s){var o;p(this,"_invoke",{value:function(p,e){function c(){return new s((function(o,c){!function p(o,e,c,u){var l=k(n[o],n,e);if("throw"!==l.type){var r=l.arg,i=r.value;return i&&"object"==a(i)&&t.call(i,"__await")?s.resolve(i.__await).then((function(n){p("next",n,c,u)}),(function(n){p("throw",n,c,u)})):s.resolve(i).then((function(n){r.value=n,c(r)}),(function(n){return p("throw",n,c,u)}))}u(l.arg)}(p,e,o,c)}))}return o=o?o.then(c,c):c()}})}function S(n,a,s){var t="suspendedStart";return function(p,o){if("executing"===t)throw new Error("Generator is already running");if("completed"===t){if("throw"===p)throw o;return R()}for(s.method=p,s.arg=o;;){var e=s.delegate;if(e){var c=L(e,s);if(c){if(c===d)continue;return c}}if("next"===s.method)s.sent=s._sent=s.arg;else if("throw"===s.method){if("suspendedStart"===t)throw t="completed",s.arg;s.dispatchException(s.arg)}else"return"===s.method&&s.abrupt("return",s.arg);t="executing";var u=k(n,a,s);if("normal"===u.type){if(t=s.done?"completed":"suspendedYield",u.arg===d)continue;return{value:u.arg,done:s.done}}"throw"===u.type&&(t="completed",s.method="throw",s.arg=u.arg)}}}function L(n,a){var s=a.method,t=n.iterator[s];if(void 0===t)return a.delegate=null,"throw"===s&&n.iterator.return&&(a.method="return",a.arg=void 0,L(n,a),"throw"===a.method)||"return"!==s&&(a.method="throw",a.arg=new TypeError("The iterator does not provide a '"+s+"' method")),d;var p=k(t,n.iterator,a.arg);if("throw"===p.type)return a.method="throw",a.arg=p.arg,a.delegate=null,d;var o=p.arg;return o?o.done?(a[n.resultName]=o.value,a.next=n.nextLoc,"return"!==a.method&&(a.method="next",a.arg=void 0),a.delegate=null,d):o:(a.method="throw",a.arg=new TypeError("iterator result is not an object"),a.delegate=null,d)}function j(n){var a={tryLoc:n[0]};1 in n&&(a.catchLoc=n[1]),2 in n&&(a.finallyLoc=n[2],a.afterLoc=n[3]),this.tryEntries.push(a)}function E(n){var a=n.completion||{};a.type="normal",delete a.arg,n.completion=a}function _(n){this.tryEntries=[{tryLoc:"root"}],n.forEach(j,this),this.reset(!0)}function I(n){if(n){var a=n[c];if(a)return a.call(n);if("function"==typeof n.next)return n;if(!isNaN(n.length)){var s=-1,p=function a(){for(;++s<n.length;)if(t.call(n,s))return a.value=n[s],a.done=!1,a;return a.value=void 0,a.done=!0,a};return p.next=p}}return{next:R}}function R(){return{value:void 0,done:!0}}return h.prototype=y,p(w,"constructor",{value:y,configurable:!0}),p(y,"constructor",{value:h,configurable:!0}),h.displayName=r(y,l,"GeneratorFunction"),n.isGeneratorFunction=function(n){var a="function"==typeof n&&n.constructor;return!!a&&(a===h||"GeneratorFunction"===(a.displayName||a.name))},n.mark=function(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,y):(n.__proto__=y,r(n,l,"GeneratorFunction")),n.prototype=Object.create(w),n},n.awrap=function(n){return{__await:n}},b(x.prototype),r(x.prototype,u,(function(){return this})),n.AsyncIterator=x,n.async=function(a,s,t,p,o){void 0===o&&(o=Promise);var e=new x(i(a,s,t,p),o);return n.isGeneratorFunction(s)?e:e.next().then((function(n){return n.done?n.value:e.next()}))},b(w),r(w,l,"Generator"),r(w,c,(function(){return this})),r(w,"toString",(function(){return"[object Generator]"})),n.keys=function(n){var a=Object(n),s=[];for(var t in a)s.push(t);return s.reverse(),function n(){for(;s.length;){var t=s.pop();if(t in a)return n.value=t,n.done=!1,n}return n.done=!0,n}},n.values=I,_.prototype={constructor:_,reset:function(n){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(E),!n)for(var a in this)"t"===a.charAt(0)&&t.call(this,a)&&!isNaN(+a.slice(1))&&(this[a]=void 0)},stop:function(){this.done=!0;var n=this.tryEntries[0].completion;if("throw"===n.type)throw n.arg;return this.rval},dispatchException:function(n){if(this.done)throw n;var a=this;function s(s,t){return e.type="throw",e.arg=n,a.next=s,t&&(a.method="next",a.arg=void 0),!!t}for(var p=this.tryEntries.length-1;p>=0;--p){var o=this.tryEntries[p],e=o.completion;if("root"===o.tryLoc)return s("end");if(o.tryLoc<=this.prev){var c=t.call(o,"catchLoc"),u=t.call(o,"finallyLoc");if(c&&u){if(this.prev<o.catchLoc)return s(o.catchLoc,!0);if(this.prev<o.finallyLoc)return s(o.finallyLoc)}else if(c){if(this.prev<o.catchLoc)return s(o.catchLoc,!0)}else{if(!u)throw new Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return s(o.finallyLoc)}}}},abrupt:function(n,a){for(var s=this.tryEntries.length-1;s>=0;--s){var p=this.tryEntries[s];if(p.tryLoc<=this.prev&&t.call(p,"finallyLoc")&&this.prev<p.finallyLoc){var o=p;break}}o&&("break"===n||"continue"===n)&&o.tryLoc<=a&&a<=o.finallyLoc&&(o=null);var e=o?o.completion:{};return e.type=n,e.arg=a,o?(this.method="next",this.next=o.finallyLoc,d):this.complete(e)},complete:function(n,a){if("throw"===n.type)throw n.arg;return"break"===n.type||"continue"===n.type?this.next=n.arg:"return"===n.type?(this.rval=this.arg=n.arg,this.method="return",this.next="end"):"normal"===n.type&&a&&(this.next=a),d},finish:function(n){for(var a=this.tryEntries.length-1;a>=0;--a){var s=this.tryEntries[a];if(s.finallyLoc===n)return this.complete(s.completion,s.afterLoc),E(s),d}},catch:function(n){for(var a=this.tryEntries.length-1;a>=0;--a){var s=this.tryEntries[a];if(s.tryLoc===n){var t=s.completion;if("throw"===t.type){var p=t.arg;E(s)}return p}}throw new Error("illegal catch attempt")},delegateYield:function(n,a,s){return this.delegate={iterator:I(n),resultName:a,nextLoc:s},"next"===this.method&&(this.arg=void 0),d}},n}function e(n,a,s,t,p,o,e){try{var c=n[o](e),u=c.value}catch(n){return void s(n)}c.done?a(u):Promise.resolve(u).then(t,p)}function c(n){return function(){var a=this,s=arguments;return new Promise((function(t,p){var o=n.apply(a,s);function c(n){e(o,t,p,c,u,"next",n)}function u(n){e(o,t,p,c,u,"throw",n)}c(void 0)}))}}function u(n,a){return function(n){if(Array.isArray(n))return n}(n)||function(n,a){var s=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=s){var t,p,o,e,c=[],u=!0,l=!1;try{if(o=(s=s.call(n)).next,0===a){if(Object(s)!==s)return;u=!1}else for(;!(u=(t=o.call(s)).done)&&(c.push(t.value),c.length!==a);u=!0);}catch(n){l=!0,p=n}finally{try{if(!u&&null!=s.return&&(e=s.return(),Object(e)!==e))return}finally{if(l)throw p}}return c}}(n,a)||function(n,a){if(!n)return;if("string"==typeof n)return l(n,a);var s=Object.prototype.toString.call(n).slice(8,-1);"Object"===s&&n.constructor&&(s=n.constructor.name);if("Map"===s||"Set"===s)return Array.from(n);if("Arguments"===s||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(s))return l(n,a)}(n,a)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function l(n,a){(null==a||a>n.length)&&(a=n.length);for(var s=0,t=new Array(a);s<a;s++)t[s]=n[s];return t}var r="https://easy-mock.com/mock/5f7e96fbf9d9bd19dca629b0/dantd/list",i=[{title:"标题",dataIndex:"title",commonSearch:!0},{title:"缩略图",dataIndex:"image",render:function(a,s,t){return n.createElement("div",null,s.thumbnail_pic_s?n.createElement("img",{style:{maxHeight:40},src:s.thumbnail_pic_s,alt:s.title}):"暂无图片")}},{title:"分类",dataIndex:"category",commonFilter:!0},{title:"作者",dataIndex:"author_name",commonFilter:!0},{title:"发布日期",dataIndex:"date",commonSorter:!0}],k=function(){var a=u(n.useState([]),2),s=a[0],e=a[1],l=u(n.useState(!1),2),k=(l[0],l[1]),d=u(n.useState(),2),f=d[0],h=d[1],y=(0,p.useDebounce)(f,500);function g(){return m.apply(this,arguments)}function m(){return(m=c(o().mark((function n(){var a,s,t=arguments;return o().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:return a=t.length>0&&void 0!==t[0]?t[0]:{},(s=new URL(r)).search=new URLSearchParams(a),k(!0),n.next=6,fetch(s);case 6:n.sent.json().then((function(n){e(n.data),k(!1)})).catch((function(){k(!1)}));case 8:case"end":return n.stop()}}),n)})))).apply(this,arguments)}n.useEffect((function(){g()}),[]),n.useEffect((function(){g({title:y})}),[y]);return n.createElement("div",null,n.createElement(t.Input,{style:{width:"100%",marginBottom:10},allowClear:!0,value:f,onChange:function(n){var a=n.target.value;h(a)},placeholder:"模糊搜索表格内容(多个关键词请用空格分隔。如：key1 key2)"}),n.createElement(t.Table,{columns:i,dataSource:s}))};return n.createElement("div",null,n.createElement(k,null))}}}}]);