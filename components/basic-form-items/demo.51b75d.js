(window.webpackJsonp=window.webpackJsonp||[]).push([[2],{1308:function(n,a,s){n.exports={custom:s(1358),input:s(1580),select:s(1581)}},1358:function(n,a,s){n.exports={content:[["p","当 ",["code","type=custom"]," 时，可以通过 ",["code","component"]," 属性传入组件"]],meta:{order:3,title:"Custom",filename:"components/basic-form-items/demo/custom.md",id:"components-basic-form-items-demo-custom"},toc:["ul"],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span>useState<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> BasicFormItems<span class="token punctuation">,</span> EmptyLine <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'dantdv3\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> processBasicFormItemsData <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'dantdv3/utils\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Form<span class="token punctuation">,</span> Button<span class="token punctuation">,</span> DatePicker<span class="token punctuation">,</span> InputNumber <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> moment <span class="token keyword">from</span> <span class="token string">\'moment\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> Demo <span class="token operator">=</span> props <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> form <span class="token punctuation">}</span> <span class="token operator">=</span> props<span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>results<span class="token punctuation">,</span> setResults<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> customDataSource <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">\'张三\'</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token function">moment</span><span class="token punctuation">(</span><span class="token string">\'1996-12-23\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">\'程序员\'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> handleSubmit <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span>\n      form<span class="token punctuation">:</span> <span class="token punctuation">{</span> validateFields <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span> <span class="token operator">=</span> props<span class="token punctuation">;</span>\n\n    <span class="token function">validateFields</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span>errors<span class="token punctuation">,</span> values<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>errors<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n\n      <span class="token function">setResults</span><span class="token punctuation">(</span>JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token function">processBasicFormItemsData</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>\n      <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n        position<span class="token punctuation">:</span> <span class="token string">\'relative\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n    <span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>BasicFormItems</span>\n        <span class="token attr-name">fieldName</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>customParams<span class="token punctuation">"</span></span>\n        <span class="token attr-name">form</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>form<span class="token punctuation">}</span></span>\n        <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>customDataSource<span class="token punctuation">}</span></span>\n        <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            type<span class="token punctuation">:</span> <span class="token string">\'input\'</span><span class="token punctuation">,</span>\n            title<span class="token punctuation">:</span> <span class="token string">\'姓名\'</span><span class="token punctuation">,</span>\n            required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            type<span class="token punctuation">:</span> <span class="token string">\'custom\'</span><span class="token punctuation">,</span>\n            title<span class="token punctuation">:</span> <span class="token string">\'年龄\'</span><span class="token punctuation">,</span>\n            required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            component<span class="token punctuation">:</span> <span class="token punctuation">(</span>\n              <span class="token operator">&lt;</span>InputNumber style<span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> marginTop<span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span> width<span class="token punctuation">:</span> <span class="token string">\'100%\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token attr-name">min</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">}</span></span> <span class="token attr-name">precision</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n            <span class="token punctuation">)</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            type<span class="token punctuation">:</span> <span class="token string">\'custom\'</span><span class="token punctuation">,</span>\n            title<span class="token punctuation">:</span> <span class="token string">\'生日\'</span><span class="token punctuation">,</span>\n            required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            component<span class="token punctuation">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>DatePicker</span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> marginTop<span class="token punctuation">:</span> <span class="token number">4</span><span class="token punctuation">,</span> width<span class="token punctuation">:</span> <span class="token string">\'100%\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            type<span class="token punctuation">:</span> <span class="token string">\'select\'</span><span class="token punctuation">,</span>\n            title<span class="token punctuation">:</span> <span class="token string">\'职业\'</span><span class="token punctuation">,</span>\n            required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            selectOptions<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n              <span class="token punctuation">{</span>\n                title<span class="token punctuation">:</span> <span class="token string">\'程序员\'</span><span class="token punctuation">,</span>\n                value<span class="token punctuation">:</span> <span class="token string">\'程序员\'</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n              <span class="token punctuation">{</span>\n                title<span class="token punctuation">:</span> <span class="token string">\'产品经理\'</span><span class="token punctuation">,</span>\n                value<span class="token punctuation">:</span> <span class="token string">\'产品经理\'</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n              <span class="token punctuation">{</span>\n                title<span class="token punctuation">:</span> <span class="token string">\'设计师\'</span><span class="token punctuation">,</span>\n                value<span class="token punctuation">:</span> <span class="token string">\'设计师\'</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">]</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">}</span>\n      <span class="token operator">/</span><span class="token operator">></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>EmptyLine</span> <span class="token attr-name">height</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token number">60</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>\n        <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span>\n        <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>handleSubmit<span class="token punctuation">}</span></span>\n      <span class="token punctuation">></span></span>\n        提交\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>EmptyLine</span> <span class="token punctuation">/></span></span>\n      <span class="token punctuation">{</span>results<span class="token punctuation">}</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> BasicDemoForm <span class="token operator">=</span> Form<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">\'basic-form\'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>Demo<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>BasicDemoForm</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],highlightedCodes:{jsx:'<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span>useState<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> BasicFormItems<span class="token punctuation">,</span> EmptyLine <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'dantdv3\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> processBasicFormItemsData <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'dantdv3/utils\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Form<span class="token punctuation">,</span> Button<span class="token punctuation">,</span> DatePicker<span class="token punctuation">,</span> InputNumber <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> moment <span class="token keyword">from</span> <span class="token string">\'moment\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">Demo</span> <span class="token operator">=</span> <span class="token parameter">props</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> form <span class="token punctuation">}</span> <span class="token operator">=</span> props<span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>results<span class="token punctuation">,</span> setResults<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> customDataSource <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">\'张三\'</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token function">moment</span><span class="token punctuation">(</span><span class="token string">\'1996-12-23\'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">\'程序员\'</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token function-variable function">handleSubmit</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">form</span><span class="token operator">:</span> <span class="token punctuation">{</span> validateFields <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span> <span class="token operator">=</span> props<span class="token punctuation">;</span>\n\n    <span class="token function">validateFields</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">errors<span class="token punctuation">,</span> values</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>errors<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n\n      <span class="token function">setResults</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token function">processBasicFormItemsData</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>\n      <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">position</span><span class="token operator">:</span> <span class="token string">\'relative\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n    <span class="token punctuation">></span></span>\n      <span class="token operator">&lt;</span>BasicFormItems\n        fieldName<span class="token operator">=</span><span class="token string">"customParams"</span>\n        form<span class="token operator">=</span><span class="token punctuation">{</span>form<span class="token punctuation">}</span>\n        dataSource<span class="token operator">=</span><span class="token punctuation">{</span>customDataSource<span class="token punctuation">}</span>\n        columns<span class="token operator">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'input\'</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'姓名\'</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'custom\'</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'年龄\'</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">component</span><span class="token operator">:</span> <span class="token punctuation">(</span>\n              <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">InputNumber</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token literal-property property">marginTop</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token string">\'100%\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token attr-name">min</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">}</span></span> <span class="token attr-name">precision</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">0</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n            <span class="token punctuation">)</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'custom\'</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'生日\'</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">component</span><span class="token operator">:</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">DatePicker</span></span> <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token literal-property property">marginTop</span><span class="token operator">:</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token literal-property property">width</span><span class="token operator">:</span> <span class="token string">\'100%\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'select\'</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'职业\'</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">selectOptions</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n              <span class="token punctuation">{</span>\n                <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'程序员\'</span><span class="token punctuation">,</span>\n                <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">\'程序员\'</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n              <span class="token punctuation">{</span>\n                <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'产品经理\'</span><span class="token punctuation">,</span>\n                <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">\'产品经理\'</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n              <span class="token punctuation">{</span>\n                <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'设计师\'</span><span class="token punctuation">,</span>\n                <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">\'设计师\'</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">]</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">}</span>\n      <span class="token operator">/</span><span class="token operator">></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">EmptyLine</span></span> <span class="token attr-name">height</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">60</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span>\n        <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span>\n        <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleSubmit<span class="token punctuation">}</span></span>\n      <span class="token punctuation">></span></span>\n        提交\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">EmptyLine</span></span> <span class="token punctuation">/></span></span>\n      <span class="token punctuation">{</span>results<span class="token punctuation">}</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> BasicDemoForm <span class="token operator">=</span> Form<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'basic-form\'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>Demo<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">BasicDemoForm</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'},preview:function(){s(0),s(6);function n(a){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(a)}var a,t=function(a,s){if(!s&&a&&a.__esModule)return a;if(null===a||"object"!==n(a)&&"function"!=typeof a)return{default:a};var t=u(s);if(t&&t.has(a))return t.get(a);var p={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var e in a)if("default"!==e&&Object.prototype.hasOwnProperty.call(a,e)){var c=o?Object.getOwnPropertyDescriptor(a,e):null;c&&(c.get||c.set)?Object.defineProperty(p,e,c):p[e]=a[e]}p.default=a,t&&t.set(a,p);return p}(s(0)),p=s(1346),o=s(1348),e=s(124),c=(a=s(22))&&a.__esModule?a:{default:a};function u(n){if("function"!=typeof WeakMap)return null;var a=new WeakMap,s=new WeakMap;return(u=function(n){return n?s:a})(n)}function r(){"use strict";/*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */r=function(){return a};var a={},s=Object.prototype,t=s.hasOwnProperty,p=Object.defineProperty||function(n,a,s){n[a]=s.value},o="function"==typeof Symbol?Symbol:{},e=o.iterator||"@@iterator",c=o.asyncIterator||"@@asyncIterator",u=o.toStringTag||"@@toStringTag";function l(n,a,s){return Object.defineProperty(n,a,{value:s,enumerable:!0,configurable:!0,writable:!0}),n[a]}try{l({},"")}catch(n){l=function(n,a,s){return n[a]=s}}function i(n,a,s,t){var o=a&&a.prototype instanceof m?a:m,e=Object.create(o.prototype),c=new O(t||[]);return p(e,"_invoke",{value:E(n,s,c)}),e}function k(n,a,s){try{return{type:"normal",arg:n.call(a,s)}}catch(n){return{type:"throw",arg:n}}}a.wrap=i;var f={};function m(){}function y(){}function d(){}var g={};l(g,e,(function(){return this}));var h=Object.getPrototypeOf,v=h&&h(h(F([])));v&&v!==s&&t.call(v,e)&&(g=v);var w=d.prototype=m.prototype=Object.create(g);function b(n){["next","throw","return"].forEach((function(a){l(n,a,(function(n){return this._invoke(a,n)}))}))}function j(a,s){var o;p(this,"_invoke",{value:function(p,e){function c(){return new s((function(o,c){!function p(o,e,c,u){var r=k(a[o],a,e);if("throw"!==r.type){var l=r.arg,i=l.value;return i&&"object"==n(i)&&t.call(i,"__await")?s.resolve(i.__await).then((function(n){p("next",n,c,u)}),(function(n){p("throw",n,c,u)})):s.resolve(i).then((function(n){l.value=n,c(l)}),(function(n){return p("throw",n,c,u)}))}u(r.arg)}(p,e,o,c)}))}return o=o?o.then(c,c):c()}})}function E(n,a,s){var t="suspendedStart";return function(p,o){if("executing"===t)throw new Error("Generator is already running");if("completed"===t){if("throw"===p)throw o;return B()}for(s.method=p,s.arg=o;;){var e=s.delegate;if(e){var c=L(e,s);if(c){if(c===f)continue;return c}}if("next"===s.method)s.sent=s._sent=s.arg;else if("throw"===s.method){if("suspendedStart"===t)throw t="completed",s.arg;s.dispatchException(s.arg)}else"return"===s.method&&s.abrupt("return",s.arg);t="executing";var u=k(n,a,s);if("normal"===u.type){if(t=s.done?"completed":"suspendedYield",u.arg===f)continue;return{value:u.arg,done:s.done}}"throw"===u.type&&(t="completed",s.method="throw",s.arg=u.arg)}}}function L(n,a){var s=a.method,t=n.iterator[s];if(void 0===t)return a.delegate=null,"throw"===s&&n.iterator.return&&(a.method="return",a.arg=void 0,L(n,a),"throw"===a.method)||"return"!==s&&(a.method="throw",a.arg=new TypeError("The iterator does not provide a '"+s+"' method")),f;var p=k(t,n.iterator,a.arg);if("throw"===p.type)return a.method="throw",a.arg=p.arg,a.delegate=null,f;var o=p.arg;return o?o.done?(a[n.resultName]=o.value,a.next=n.nextLoc,"return"!==a.method&&(a.method="next",a.arg=void 0),a.delegate=null,f):o:(a.method="throw",a.arg=new TypeError("iterator result is not an object"),a.delegate=null,f)}function S(n){var a={tryLoc:n[0]};1 in n&&(a.catchLoc=n[1]),2 in n&&(a.finallyLoc=n[2],a.afterLoc=n[3]),this.tryEntries.push(a)}function x(n){var a=n.completion||{};a.type="normal",delete a.arg,n.completion=a}function O(n){this.tryEntries=[{tryLoc:"root"}],n.forEach(S,this),this.reset(!0)}function F(n){if(n){var a=n[e];if(a)return a.call(n);if("function"==typeof n.next)return n;if(!isNaN(n.length)){var s=-1,p=function a(){for(;++s<n.length;)if(t.call(n,s))return a.value=n[s],a.done=!1,a;return a.value=void 0,a.done=!0,a};return p.next=p}}return{next:B}}function B(){return{value:void 0,done:!0}}return y.prototype=d,p(w,"constructor",{value:d,configurable:!0}),p(d,"constructor",{value:y,configurable:!0}),y.displayName=l(d,u,"GeneratorFunction"),a.isGeneratorFunction=function(n){var a="function"==typeof n&&n.constructor;return!!a&&(a===y||"GeneratorFunction"===(a.displayName||a.name))},a.mark=function(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,d):(n.__proto__=d,l(n,u,"GeneratorFunction")),n.prototype=Object.create(w),n},a.awrap=function(n){return{__await:n}},b(j.prototype),l(j.prototype,c,(function(){return this})),a.AsyncIterator=j,a.async=function(n,s,t,p,o){void 0===o&&(o=Promise);var e=new j(i(n,s,t,p),o);return a.isGeneratorFunction(s)?e:e.next().then((function(n){return n.done?n.value:e.next()}))},b(w),l(w,u,"Generator"),l(w,e,(function(){return this})),l(w,"toString",(function(){return"[object Generator]"})),a.keys=function(n){var a=Object(n),s=[];for(var t in a)s.push(t);return s.reverse(),function n(){for(;s.length;){var t=s.pop();if(t in a)return n.value=t,n.done=!1,n}return n.done=!0,n}},a.values=F,O.prototype={constructor:O,reset:function(n){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(x),!n)for(var a in this)"t"===a.charAt(0)&&t.call(this,a)&&!isNaN(+a.slice(1))&&(this[a]=void 0)},stop:function(){this.done=!0;var n=this.tryEntries[0].completion;if("throw"===n.type)throw n.arg;return this.rval},dispatchException:function(n){if(this.done)throw n;var a=this;function s(s,t){return e.type="throw",e.arg=n,a.next=s,t&&(a.method="next",a.arg=void 0),!!t}for(var p=this.tryEntries.length-1;p>=0;--p){var o=this.tryEntries[p],e=o.completion;if("root"===o.tryLoc)return s("end");if(o.tryLoc<=this.prev){var c=t.call(o,"catchLoc"),u=t.call(o,"finallyLoc");if(c&&u){if(this.prev<o.catchLoc)return s(o.catchLoc,!0);if(this.prev<o.finallyLoc)return s(o.finallyLoc)}else if(c){if(this.prev<o.catchLoc)return s(o.catchLoc,!0)}else{if(!u)throw new Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return s(o.finallyLoc)}}}},abrupt:function(n,a){for(var s=this.tryEntries.length-1;s>=0;--s){var p=this.tryEntries[s];if(p.tryLoc<=this.prev&&t.call(p,"finallyLoc")&&this.prev<p.finallyLoc){var o=p;break}}o&&("break"===n||"continue"===n)&&o.tryLoc<=a&&a<=o.finallyLoc&&(o=null);var e=o?o.completion:{};return e.type=n,e.arg=a,o?(this.method="next",this.next=o.finallyLoc,f):this.complete(e)},complete:function(n,a){if("throw"===n.type)throw n.arg;return"break"===n.type||"continue"===n.type?this.next=n.arg:"return"===n.type?(this.rval=this.arg=n.arg,this.method="return",this.next="end"):"normal"===n.type&&a&&(this.next=a),f},finish:function(n){for(var a=this.tryEntries.length-1;a>=0;--a){var s=this.tryEntries[a];if(s.finallyLoc===n)return this.complete(s.completion,s.afterLoc),x(s),f}},catch:function(n){for(var a=this.tryEntries.length-1;a>=0;--a){var s=this.tryEntries[a];if(s.tryLoc===n){var t=s.completion;if("throw"===t.type){var p=t.arg;x(s)}return p}}throw new Error("illegal catch attempt")},delegateYield:function(n,a,s){return this.delegate={iterator:F(n),resultName:a,nextLoc:s},"next"===this.method&&(this.arg=void 0),f}},a}function l(n,a,s,t,p,o,e){try{var c=n[o](e),u=c.value}catch(n){return void s(n)}c.done?a(u):Promise.resolve(u).then(t,p)}function i(n,a){return function(n){if(Array.isArray(n))return n}(n)||function(n,a){var s=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=s){var t,p,o,e,c=[],u=!0,r=!1;try{if(o=(s=s.call(n)).next,0===a){if(Object(s)!==s)return;u=!1}else for(;!(u=(t=o.call(s)).done)&&(c.push(t.value),c.length!==a);u=!0);}catch(n){r=!0,p=n}finally{try{if(!u&&null!=s.return&&(e=s.return(),Object(e)!==e))return}finally{if(r)throw p}}return c}}(n,a)||function(n,a){if(!n)return;if("string"==typeof n)return k(n,a);var s=Object.prototype.toString.call(n).slice(8,-1);"Object"===s&&n.constructor&&(s=n.constructor.name);if("Map"===s||"Set"===s)return Array.from(n);if("Arguments"===s||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(s))return k(n,a)}(n,a)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function k(n,a){(null==a||a>n.length)&&(a=n.length);for(var s=0,t=new Array(a);s<a;s++)t[s]=n[s];return t}var f=e.Form.create({name:"basic-form"})((function(n){var a=n.form,s=i((0,t.useState)(),2),u=s[0],k=s[1],f=[["张三",23,(0,c.default)("1996-12-23"),"程序员"]];return t.default.createElement("div",{style:{position:"relative"}},t.default.createElement(p.BasicFormItems,{fieldName:"customParams",form:a,dataSource:f,columns:[{type:"input",title:"姓名",required:!0},{type:"custom",title:"年龄",required:!0,component:t.default.createElement(e.InputNumber,{style:{marginTop:4,width:"100%"},min:0,precision:0})},{type:"custom",title:"生日",required:!0,component:t.default.createElement(e.DatePicker,{style:{marginTop:4,width:"100%"}})},{type:"select",title:"职业",required:!0,selectOptions:[{title:"程序员",value:"程序员"},{title:"产品经理",value:"产品经理"},{title:"设计师",value:"设计师"}]}]}),t.default.createElement(p.EmptyLine,{height:60}),t.default.createElement(e.Button,{type:"primary",onClick:function(){(0,n.form.validateFields)(function(){var n,a=(n=r().mark((function n(a,s){return r().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(!a){n.next=2;break}return n.abrupt("return");case 2:k(JSON.stringify((0,o.processBasicFormItemsData)(s)));case 3:case"end":return n.stop()}}),n)})),function(){var a=this,s=arguments;return new Promise((function(t,p){var o=n.apply(a,s);function e(n){l(o,t,p,e,c,"next",n)}function c(n){l(o,t,p,e,c,"throw",n)}e(void 0)}))});return function(n,s){return a.apply(this,arguments)}}())}},"提交"),t.default.createElement(p.EmptyLine,null),u)}));return t.default.createElement(f,null)}}},1580:function(n,a,s){n.exports={content:[["p","这是一个基础的动态表单，可以使用 ",["code","dataSource"]," 来设置初始值。"]],meta:{order:0,title:"Input",filename:"components/basic-form-items/demo/input.md",id:"components-basic-form-items-demo-input"},toc:["ul"],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span>useState<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> BasicFormItems<span class="token punctuation">,</span> EmptyLine <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'dantdv3\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> processBasicFormItemsData <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'dantdv3/utils\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Form<span class="token punctuation">,</span> Button <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> Demo <span class="token operator">=</span> props <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> form <span class="token punctuation">}</span> <span class="token operator">=</span> props<span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>results<span class="token punctuation">,</span> setResults<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> handleSubmit <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span>\n      form<span class="token punctuation">:</span> <span class="token punctuation">{</span> validateFields <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span> <span class="token operator">=</span> props<span class="token punctuation">;</span>\n\n    <span class="token function">validateFields</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span>errors<span class="token punctuation">,</span> values<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>errors<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n\n      <span class="token function">setResults</span><span class="token punctuation">(</span>JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token function">processBasicFormItemsData</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>\n      <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n        position<span class="token punctuation">:</span> <span class="token string">\'relative\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n    <span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>BasicFormItems</span>          \n        <span class="token attr-name">fieldName</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>inputParams<span class="token punctuation">"</span></span>\n        <span class="token attr-name">form</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>form<span class="token punctuation">}</span></span>\n        <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            type<span class="token punctuation">:</span> <span class="token string">\'input\'</span><span class="token punctuation">,</span>\n            title<span class="token punctuation">:</span> <span class="token string">\'自定义Value\'</span><span class="token punctuation">,</span>\n            required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">}</span></span> \n      <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>EmptyLine</span> <span class="token attr-name">height</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token number">60</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>\n        <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span>\n        <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>handleSubmit<span class="token punctuation">}</span></span>\n      <span class="token punctuation">></span></span>\n        提交\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>EmptyLine</span> <span class="token punctuation">/></span></span>\n      <span class="token punctuation">{</span>results<span class="token punctuation">}</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> BasicDemoForm <span class="token operator">=</span> Form<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">\'basic-form\'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>Demo<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>BasicDemoForm</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],highlightedCodes:{jsx:'<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span>useState<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> BasicFormItems<span class="token punctuation">,</span> EmptyLine <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'dantdv3\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> processBasicFormItemsData <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'dantdv3/utils\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Form<span class="token punctuation">,</span> Button <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> <span class="token function-variable function">Demo</span> <span class="token operator">=</span> <span class="token parameter">props</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> form <span class="token punctuation">}</span> <span class="token operator">=</span> props<span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>results<span class="token punctuation">,</span> setResults<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token function-variable function">handleSubmit</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">form</span><span class="token operator">:</span> <span class="token punctuation">{</span> validateFields <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span> <span class="token operator">=</span> props<span class="token punctuation">;</span>\n\n    <span class="token function">validateFields</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">errors<span class="token punctuation">,</span> values</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>errors<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n\n      <span class="token function">setResults</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token function">processBasicFormItemsData</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>\n      <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">position</span><span class="token operator">:</span> <span class="token string">\'relative\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n    <span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">BasicFormItems</span></span>          \n        <span class="token attr-name">fieldName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>inputParams<span class="token punctuation">"</span></span>\n        <span class="token attr-name">form</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>form<span class="token punctuation">}</span></span>\n        <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'input\'</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'自定义Value\'</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">}</span></span> \n      <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">EmptyLine</span></span> <span class="token attr-name">height</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">60</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span>\n        <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span>\n        <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleSubmit<span class="token punctuation">}</span></span>\n      <span class="token punctuation">></span></span>\n        提交\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">EmptyLine</span></span> <span class="token punctuation">/></span></span>\n      <span class="token punctuation">{</span>results<span class="token punctuation">}</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> BasicDemoForm <span class="token operator">=</span> Form<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'basic-form\'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>Demo<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">BasicDemoForm</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'},preview:function(){s(0),s(6);function n(a){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(a)}var a=function(a,s){if(!s&&a&&a.__esModule)return a;if(null===a||"object"!==n(a)&&"function"!=typeof a)return{default:a};var t=e(s);if(t&&t.has(a))return t.get(a);var p={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var c in a)if("default"!==c&&Object.prototype.hasOwnProperty.call(a,c)){var u=o?Object.getOwnPropertyDescriptor(a,c):null;u&&(u.get||u.set)?Object.defineProperty(p,c,u):p[c]=a[c]}p.default=a,t&&t.set(a,p);return p}(s(0)),t=s(1346),p=s(1348),o=s(124);function e(n){if("function"!=typeof WeakMap)return null;var a=new WeakMap,s=new WeakMap;return(e=function(n){return n?s:a})(n)}function c(){"use strict";/*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */c=function(){return a};var a={},s=Object.prototype,t=s.hasOwnProperty,p=Object.defineProperty||function(n,a,s){n[a]=s.value},o="function"==typeof Symbol?Symbol:{},e=o.iterator||"@@iterator",u=o.asyncIterator||"@@asyncIterator",r=o.toStringTag||"@@toStringTag";function l(n,a,s){return Object.defineProperty(n,a,{value:s,enumerable:!0,configurable:!0,writable:!0}),n[a]}try{l({},"")}catch(n){l=function(n,a,s){return n[a]=s}}function i(n,a,s,t){var o=a&&a.prototype instanceof m?a:m,e=Object.create(o.prototype),c=new O(t||[]);return p(e,"_invoke",{value:E(n,s,c)}),e}function k(n,a,s){try{return{type:"normal",arg:n.call(a,s)}}catch(n){return{type:"throw",arg:n}}}a.wrap=i;var f={};function m(){}function y(){}function d(){}var g={};l(g,e,(function(){return this}));var h=Object.getPrototypeOf,v=h&&h(h(F([])));v&&v!==s&&t.call(v,e)&&(g=v);var w=d.prototype=m.prototype=Object.create(g);function b(n){["next","throw","return"].forEach((function(a){l(n,a,(function(n){return this._invoke(a,n)}))}))}function j(a,s){var o;p(this,"_invoke",{value:function(p,e){function c(){return new s((function(o,c){!function p(o,e,c,u){var r=k(a[o],a,e);if("throw"!==r.type){var l=r.arg,i=l.value;return i&&"object"==n(i)&&t.call(i,"__await")?s.resolve(i.__await).then((function(n){p("next",n,c,u)}),(function(n){p("throw",n,c,u)})):s.resolve(i).then((function(n){l.value=n,c(l)}),(function(n){return p("throw",n,c,u)}))}u(r.arg)}(p,e,o,c)}))}return o=o?o.then(c,c):c()}})}function E(n,a,s){var t="suspendedStart";return function(p,o){if("executing"===t)throw new Error("Generator is already running");if("completed"===t){if("throw"===p)throw o;return B()}for(s.method=p,s.arg=o;;){var e=s.delegate;if(e){var c=L(e,s);if(c){if(c===f)continue;return c}}if("next"===s.method)s.sent=s._sent=s.arg;else if("throw"===s.method){if("suspendedStart"===t)throw t="completed",s.arg;s.dispatchException(s.arg)}else"return"===s.method&&s.abrupt("return",s.arg);t="executing";var u=k(n,a,s);if("normal"===u.type){if(t=s.done?"completed":"suspendedYield",u.arg===f)continue;return{value:u.arg,done:s.done}}"throw"===u.type&&(t="completed",s.method="throw",s.arg=u.arg)}}}function L(n,a){var s=a.method,t=n.iterator[s];if(void 0===t)return a.delegate=null,"throw"===s&&n.iterator.return&&(a.method="return",a.arg=void 0,L(n,a),"throw"===a.method)||"return"!==s&&(a.method="throw",a.arg=new TypeError("The iterator does not provide a '"+s+"' method")),f;var p=k(t,n.iterator,a.arg);if("throw"===p.type)return a.method="throw",a.arg=p.arg,a.delegate=null,f;var o=p.arg;return o?o.done?(a[n.resultName]=o.value,a.next=n.nextLoc,"return"!==a.method&&(a.method="next",a.arg=void 0),a.delegate=null,f):o:(a.method="throw",a.arg=new TypeError("iterator result is not an object"),a.delegate=null,f)}function S(n){var a={tryLoc:n[0]};1 in n&&(a.catchLoc=n[1]),2 in n&&(a.finallyLoc=n[2],a.afterLoc=n[3]),this.tryEntries.push(a)}function x(n){var a=n.completion||{};a.type="normal",delete a.arg,n.completion=a}function O(n){this.tryEntries=[{tryLoc:"root"}],n.forEach(S,this),this.reset(!0)}function F(n){if(n){var a=n[e];if(a)return a.call(n);if("function"==typeof n.next)return n;if(!isNaN(n.length)){var s=-1,p=function a(){for(;++s<n.length;)if(t.call(n,s))return a.value=n[s],a.done=!1,a;return a.value=void 0,a.done=!0,a};return p.next=p}}return{next:B}}function B(){return{value:void 0,done:!0}}return y.prototype=d,p(w,"constructor",{value:d,configurable:!0}),p(d,"constructor",{value:y,configurable:!0}),y.displayName=l(d,r,"GeneratorFunction"),a.isGeneratorFunction=function(n){var a="function"==typeof n&&n.constructor;return!!a&&(a===y||"GeneratorFunction"===(a.displayName||a.name))},a.mark=function(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,d):(n.__proto__=d,l(n,r,"GeneratorFunction")),n.prototype=Object.create(w),n},a.awrap=function(n){return{__await:n}},b(j.prototype),l(j.prototype,u,(function(){return this})),a.AsyncIterator=j,a.async=function(n,s,t,p,o){void 0===o&&(o=Promise);var e=new j(i(n,s,t,p),o);return a.isGeneratorFunction(s)?e:e.next().then((function(n){return n.done?n.value:e.next()}))},b(w),l(w,r,"Generator"),l(w,e,(function(){return this})),l(w,"toString",(function(){return"[object Generator]"})),a.keys=function(n){var a=Object(n),s=[];for(var t in a)s.push(t);return s.reverse(),function n(){for(;s.length;){var t=s.pop();if(t in a)return n.value=t,n.done=!1,n}return n.done=!0,n}},a.values=F,O.prototype={constructor:O,reset:function(n){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(x),!n)for(var a in this)"t"===a.charAt(0)&&t.call(this,a)&&!isNaN(+a.slice(1))&&(this[a]=void 0)},stop:function(){this.done=!0;var n=this.tryEntries[0].completion;if("throw"===n.type)throw n.arg;return this.rval},dispatchException:function(n){if(this.done)throw n;var a=this;function s(s,t){return e.type="throw",e.arg=n,a.next=s,t&&(a.method="next",a.arg=void 0),!!t}for(var p=this.tryEntries.length-1;p>=0;--p){var o=this.tryEntries[p],e=o.completion;if("root"===o.tryLoc)return s("end");if(o.tryLoc<=this.prev){var c=t.call(o,"catchLoc"),u=t.call(o,"finallyLoc");if(c&&u){if(this.prev<o.catchLoc)return s(o.catchLoc,!0);if(this.prev<o.finallyLoc)return s(o.finallyLoc)}else if(c){if(this.prev<o.catchLoc)return s(o.catchLoc,!0)}else{if(!u)throw new Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return s(o.finallyLoc)}}}},abrupt:function(n,a){for(var s=this.tryEntries.length-1;s>=0;--s){var p=this.tryEntries[s];if(p.tryLoc<=this.prev&&t.call(p,"finallyLoc")&&this.prev<p.finallyLoc){var o=p;break}}o&&("break"===n||"continue"===n)&&o.tryLoc<=a&&a<=o.finallyLoc&&(o=null);var e=o?o.completion:{};return e.type=n,e.arg=a,o?(this.method="next",this.next=o.finallyLoc,f):this.complete(e)},complete:function(n,a){if("throw"===n.type)throw n.arg;return"break"===n.type||"continue"===n.type?this.next=n.arg:"return"===n.type?(this.rval=this.arg=n.arg,this.method="return",this.next="end"):"normal"===n.type&&a&&(this.next=a),f},finish:function(n){for(var a=this.tryEntries.length-1;a>=0;--a){var s=this.tryEntries[a];if(s.finallyLoc===n)return this.complete(s.completion,s.afterLoc),x(s),f}},catch:function(n){for(var a=this.tryEntries.length-1;a>=0;--a){var s=this.tryEntries[a];if(s.tryLoc===n){var t=s.completion;if("throw"===t.type){var p=t.arg;x(s)}return p}}throw new Error("illegal catch attempt")},delegateYield:function(n,a,s){return this.delegate={iterator:F(n),resultName:a,nextLoc:s},"next"===this.method&&(this.arg=void 0),f}},a}function u(n,a,s,t,p,o,e){try{var c=n[o](e),u=c.value}catch(n){return void s(n)}c.done?a(u):Promise.resolve(u).then(t,p)}function r(n,a){return function(n){if(Array.isArray(n))return n}(n)||function(n,a){var s=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=s){var t,p,o,e,c=[],u=!0,r=!1;try{if(o=(s=s.call(n)).next,0===a){if(Object(s)!==s)return;u=!1}else for(;!(u=(t=o.call(s)).done)&&(c.push(t.value),c.length!==a);u=!0);}catch(n){r=!0,p=n}finally{try{if(!u&&null!=s.return&&(e=s.return(),Object(e)!==e))return}finally{if(r)throw p}}return c}}(n,a)||function(n,a){if(!n)return;if("string"==typeof n)return l(n,a);var s=Object.prototype.toString.call(n).slice(8,-1);"Object"===s&&n.constructor&&(s=n.constructor.name);if("Map"===s||"Set"===s)return Array.from(n);if("Arguments"===s||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(s))return l(n,a)}(n,a)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function l(n,a){(null==a||a>n.length)&&(a=n.length);for(var s=0,t=new Array(a);s<a;s++)t[s]=n[s];return t}var i=o.Form.create({name:"basic-form"})((function(n){var s=n.form,e=r((0,a.useState)(),2),l=e[0],i=e[1];return a.default.createElement("div",{style:{position:"relative"}},a.default.createElement(t.BasicFormItems,{fieldName:"inputParams",form:s,columns:[{type:"input",title:"自定义Value",required:!0}]}),a.default.createElement(t.EmptyLine,{height:60}),a.default.createElement(o.Button,{type:"primary",onClick:function(){(0,n.form.validateFields)(function(){var n,a=(n=c().mark((function n(a,s){return c().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(!a){n.next=2;break}return n.abrupt("return");case 2:i(JSON.stringify((0,p.processBasicFormItemsData)(s)));case 3:case"end":return n.stop()}}),n)})),function(){var a=this,s=arguments;return new Promise((function(t,p){var o=n.apply(a,s);function e(n){u(o,t,p,e,c,"next",n)}function c(n){u(o,t,p,e,c,"throw",n)}e(void 0)}))});return function(n,s){return a.apply(this,arguments)}}())}},"提交"),a.default.createElement(t.EmptyLine,null),l)}));return a.default.createElement(i,null)}}},1581:function(n,a,s){n.exports={content:[["p","当 ",["code","type=select"]," 时，可以通过 ",["code","selectOptions"]," 属性传入下拉选项"]],meta:{order:2,title:"Select",filename:"components/basic-form-items/demo/select.md",id:"components-basic-form-items-demo-select"},toc:["ul"],highlightedCode:["pre",{lang:"jsx",highlighted:'<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span>useState<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> BasicFormItems<span class="token punctuation">,</span> EmptyLine <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'dantdv3\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> processBasicFormItemsData <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'dantdv3/utils\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Form<span class="token punctuation">,</span> Button <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n\n\n\n<span class="token keyword">const</span> Demo <span class="token operator">=</span> props <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> form <span class="token punctuation">}</span> <span class="token operator">=</span> props<span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>results<span class="token punctuation">,</span> setResults<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> dataSource <span class="token operator">=</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">[</span><span class="token string">\'显示器\'</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">[</span><span class="token string">\'主机\'</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">15000</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> handleSubmit <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span>\n      form<span class="token punctuation">:</span> <span class="token punctuation">{</span> validateFields <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span> <span class="token operator">=</span> props<span class="token punctuation">;</span>\n\n    <span class="token function">validateFields</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span>errors<span class="token punctuation">,</span> values<span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>errors<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n\n      <span class="token function">setResults</span><span class="token punctuation">(</span>JSON<span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token function">processBasicFormItemsData</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>\n      <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n        position<span class="token punctuation">:</span> <span class="token string">\'relative\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n    <span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>BasicFormItems</span>\n        <span class="token attr-name">fieldName</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>selectParams<span class="token punctuation">"</span></span>\n        <span class="token attr-name">form</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>form<span class="token punctuation">}</span></span>\n        <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>dataSource<span class="token punctuation">}</span></span>\n        <span class="token attr-name">maxCount</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token number">3</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            type<span class="token punctuation">:</span> <span class="token string">\'select\'</span><span class="token punctuation">,</span>\n            title<span class="token punctuation">:</span> <span class="token string">\'电脑配件\'</span><span class="token punctuation">,</span>\n            showColon<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            isSelectUniq<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            required<span class="token punctuation">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            selectOptions<span class="token punctuation">:</span> <span class="token punctuation">[</span>\n              <span class="token punctuation">{</span>\n                title<span class="token punctuation">:</span> <span class="token string">\'显示器\'</span><span class="token punctuation">,</span>\n                value<span class="token punctuation">:</span> <span class="token string">\'显示器\'</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n              <span class="token punctuation">{</span>\n                title<span class="token punctuation">:</span> <span class="token string">\'主机\'</span><span class="token punctuation">,</span>\n                value<span class="token punctuation">:</span> <span class="token string">\'主机\'</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n              <span class="token punctuation">{</span>\n                title<span class="token punctuation">:</span> <span class="token string">\'键盘\'</span><span class="token punctuation">,</span>\n                value<span class="token punctuation">:</span> <span class="token string">\'键盘\'</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">]</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span></span><span class="token attr-name">,</span>\n          <span class="token attr-name">{</span>\n            <span class="token attr-name"><span class="token namespace">type:</span></span> <span class="token attr-name">\'input\',</span>\n            <span class="token attr-name"><span class="token namespace">title:</span></span> <span class="token attr-name">\'数量\',</span>\n            <span class="token attr-name"><span class="token namespace">required:</span></span> <span class="token attr-name">true,</span>\n          <span class="token attr-name">},</span>\n          <span class="token attr-name">{</span>\n            <span class="token attr-name"><span class="token namespace">type:</span></span> <span class="token attr-name">\'input\',</span>\n            <span class="token attr-name"><span class="token namespace">title:</span></span> <span class="token attr-name">\'价格\',</span>\n            <span class="token attr-name"><span class="token namespace">required:</span></span> <span class="token attr-name">true,</span>\n          <span class="token attr-name">},</span>\n        <span class="token attr-name">]}</span>\n      <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>EmptyLine</span> <span class="token attr-name">height</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span><span class="token number">60</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span>\n        <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span>\n        <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token punctuation">=</span><span class="token punctuation">{</span>handleSubmit<span class="token punctuation">}</span></span>\n      <span class="token punctuation">></span></span>\n        提交\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>EmptyLine</span> <span class="token punctuation">/></span></span>\n      <span class="token punctuation">{</span>results<span class="token punctuation">}</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> BasicDemoForm <span class="token operator">=</span> Form<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span> name<span class="token punctuation">:</span> <span class="token string">\'basic-form\'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>Demo<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>BasicDemoForm</span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'}],highlightedCodes:{jsx:'<span class="token keyword">import</span> React<span class="token punctuation">,</span> <span class="token punctuation">{</span>useState<span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'react\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> BasicFormItems<span class="token punctuation">,</span> EmptyLine <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'dantdv3\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> processBasicFormItemsData <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'dantdv3/utils\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Form<span class="token punctuation">,</span> Button <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'antd\'</span><span class="token punctuation">;</span>\n\n\n\n<span class="token keyword">const</span> <span class="token function-variable function">Demo</span> <span class="token operator">=</span> <span class="token parameter">props</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> <span class="token punctuation">{</span> form <span class="token punctuation">}</span> <span class="token operator">=</span> props<span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token punctuation">[</span>results<span class="token punctuation">,</span> setResults<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">useState</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> dataSource <span class="token operator">=</span> <span class="token punctuation">[</span>\n    <span class="token punctuation">[</span><span class="token string">\'显示器\'</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">5000</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">[</span><span class="token string">\'主机\'</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">15000</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token punctuation">]</span><span class="token punctuation">;</span>\n  <span class="token keyword">const</span> <span class="token function-variable function">handleSubmit</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n    <span class="token keyword">const</span> <span class="token punctuation">{</span>\n      <span class="token literal-property property">form</span><span class="token operator">:</span> <span class="token punctuation">{</span> validateFields <span class="token punctuation">}</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span> <span class="token operator">=</span> props<span class="token punctuation">;</span>\n\n    <span class="token function">validateFields</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">errors<span class="token punctuation">,</span> values</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n      <span class="token keyword">if</span> <span class="token punctuation">(</span>errors<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n        <span class="token keyword">return</span><span class="token punctuation">;</span>\n      <span class="token punctuation">}</span>\n\n      <span class="token function">setResults</span><span class="token punctuation">(</span><span class="token constant">JSON</span><span class="token punctuation">.</span><span class="token function">stringify</span><span class="token punctuation">(</span><span class="token function">processBasicFormItemsData</span><span class="token punctuation">(</span>values<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">;</span>\n  <span class="token keyword">return</span> <span class="token punctuation">(</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span>\n      <span class="token attr-name">style</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">{</span>\n        <span class="token literal-property property">position</span><span class="token operator">:</span> <span class="token string">\'relative\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">}</span><span class="token punctuation">}</span></span>\n    <span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">BasicFormItems</span></span>\n        <span class="token attr-name">fieldName</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>selectParams<span class="token punctuation">"</span></span>\n        <span class="token attr-name">form</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>form<span class="token punctuation">}</span></span>\n        <span class="token attr-name">dataSource</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>dataSource<span class="token punctuation">}</span></span>\n        <span class="token attr-name">maxCount</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">3</span><span class="token punctuation">}</span></span>\n        <span class="token attr-name">columns</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'select\'</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'电脑配件\'</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">showColon</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">isSelectUniq</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">selectOptions</span><span class="token operator">:</span> <span class="token punctuation">[</span>\n              <span class="token punctuation">{</span>\n                <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'显示器\'</span><span class="token punctuation">,</span>\n                <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">\'显示器\'</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n              <span class="token punctuation">{</span>\n                <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'主机\'</span><span class="token punctuation">,</span>\n                <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">\'主机\'</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n              <span class="token punctuation">{</span>\n                <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'键盘\'</span><span class="token punctuation">,</span>\n                <span class="token literal-property property">value</span><span class="token operator">:</span> <span class="token string">\'键盘\'</span><span class="token punctuation">,</span>\n              <span class="token punctuation">}</span><span class="token punctuation">,</span>\n            <span class="token punctuation">]</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'input\'</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'数量\'</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n          <span class="token punctuation">{</span>\n            <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">\'input\'</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">\'价格\'</span><span class="token punctuation">,</span>\n            <span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>\n          <span class="token punctuation">}</span><span class="token punctuation">,</span>\n        <span class="token punctuation">]</span><span class="token punctuation">}</span></span>\n      <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">EmptyLine</span></span> <span class="token attr-name">height</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token number">60</span><span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span>\n        <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>primary<span class="token punctuation">"</span></span>\n        <span class="token attr-name">onClick</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span>handleSubmit<span class="token punctuation">}</span></span>\n      <span class="token punctuation">></span></span>\n        提交\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span><span class="token class-name">Button</span></span><span class="token punctuation">></span></span>\n      <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">EmptyLine</span></span> <span class="token punctuation">/></span></span>\n      <span class="token punctuation">{</span>results<span class="token punctuation">}</span>\n    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">></span></span>\n  <span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span>\n\n<span class="token keyword">const</span> BasicDemoForm <span class="token operator">=</span> Form<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">\'basic-form\'</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>Demo<span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">BasicDemoForm</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> mountNode<span class="token punctuation">)</span><span class="token punctuation">;</span>'},preview:function(){s(0),s(6);function n(a){return(n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(a)}var a=function(a,s){if(!s&&a&&a.__esModule)return a;if(null===a||"object"!==n(a)&&"function"!=typeof a)return{default:a};var t=e(s);if(t&&t.has(a))return t.get(a);var p={},o=Object.defineProperty&&Object.getOwnPropertyDescriptor;for(var c in a)if("default"!==c&&Object.prototype.hasOwnProperty.call(a,c)){var u=o?Object.getOwnPropertyDescriptor(a,c):null;u&&(u.get||u.set)?Object.defineProperty(p,c,u):p[c]=a[c]}p.default=a,t&&t.set(a,p);return p}(s(0)),t=s(1346),p=s(1348),o=s(124);function e(n){if("function"!=typeof WeakMap)return null;var a=new WeakMap,s=new WeakMap;return(e=function(n){return n?s:a})(n)}function c(){"use strict";/*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */c=function(){return a};var a={},s=Object.prototype,t=s.hasOwnProperty,p=Object.defineProperty||function(n,a,s){n[a]=s.value},o="function"==typeof Symbol?Symbol:{},e=o.iterator||"@@iterator",u=o.asyncIterator||"@@asyncIterator",r=o.toStringTag||"@@toStringTag";function l(n,a,s){return Object.defineProperty(n,a,{value:s,enumerable:!0,configurable:!0,writable:!0}),n[a]}try{l({},"")}catch(n){l=function(n,a,s){return n[a]=s}}function i(n,a,s,t){var o=a&&a.prototype instanceof m?a:m,e=Object.create(o.prototype),c=new O(t||[]);return p(e,"_invoke",{value:E(n,s,c)}),e}function k(n,a,s){try{return{type:"normal",arg:n.call(a,s)}}catch(n){return{type:"throw",arg:n}}}a.wrap=i;var f={};function m(){}function y(){}function d(){}var g={};l(g,e,(function(){return this}));var h=Object.getPrototypeOf,v=h&&h(h(F([])));v&&v!==s&&t.call(v,e)&&(g=v);var w=d.prototype=m.prototype=Object.create(g);function b(n){["next","throw","return"].forEach((function(a){l(n,a,(function(n){return this._invoke(a,n)}))}))}function j(a,s){var o;p(this,"_invoke",{value:function(p,e){function c(){return new s((function(o,c){!function p(o,e,c,u){var r=k(a[o],a,e);if("throw"!==r.type){var l=r.arg,i=l.value;return i&&"object"==n(i)&&t.call(i,"__await")?s.resolve(i.__await).then((function(n){p("next",n,c,u)}),(function(n){p("throw",n,c,u)})):s.resolve(i).then((function(n){l.value=n,c(l)}),(function(n){return p("throw",n,c,u)}))}u(r.arg)}(p,e,o,c)}))}return o=o?o.then(c,c):c()}})}function E(n,a,s){var t="suspendedStart";return function(p,o){if("executing"===t)throw new Error("Generator is already running");if("completed"===t){if("throw"===p)throw o;return B()}for(s.method=p,s.arg=o;;){var e=s.delegate;if(e){var c=L(e,s);if(c){if(c===f)continue;return c}}if("next"===s.method)s.sent=s._sent=s.arg;else if("throw"===s.method){if("suspendedStart"===t)throw t="completed",s.arg;s.dispatchException(s.arg)}else"return"===s.method&&s.abrupt("return",s.arg);t="executing";var u=k(n,a,s);if("normal"===u.type){if(t=s.done?"completed":"suspendedYield",u.arg===f)continue;return{value:u.arg,done:s.done}}"throw"===u.type&&(t="completed",s.method="throw",s.arg=u.arg)}}}function L(n,a){var s=a.method,t=n.iterator[s];if(void 0===t)return a.delegate=null,"throw"===s&&n.iterator.return&&(a.method="return",a.arg=void 0,L(n,a),"throw"===a.method)||"return"!==s&&(a.method="throw",a.arg=new TypeError("The iterator does not provide a '"+s+"' method")),f;var p=k(t,n.iterator,a.arg);if("throw"===p.type)return a.method="throw",a.arg=p.arg,a.delegate=null,f;var o=p.arg;return o?o.done?(a[n.resultName]=o.value,a.next=n.nextLoc,"return"!==a.method&&(a.method="next",a.arg=void 0),a.delegate=null,f):o:(a.method="throw",a.arg=new TypeError("iterator result is not an object"),a.delegate=null,f)}function S(n){var a={tryLoc:n[0]};1 in n&&(a.catchLoc=n[1]),2 in n&&(a.finallyLoc=n[2],a.afterLoc=n[3]),this.tryEntries.push(a)}function x(n){var a=n.completion||{};a.type="normal",delete a.arg,n.completion=a}function O(n){this.tryEntries=[{tryLoc:"root"}],n.forEach(S,this),this.reset(!0)}function F(n){if(n){var a=n[e];if(a)return a.call(n);if("function"==typeof n.next)return n;if(!isNaN(n.length)){var s=-1,p=function a(){for(;++s<n.length;)if(t.call(n,s))return a.value=n[s],a.done=!1,a;return a.value=void 0,a.done=!0,a};return p.next=p}}return{next:B}}function B(){return{value:void 0,done:!0}}return y.prototype=d,p(w,"constructor",{value:d,configurable:!0}),p(d,"constructor",{value:y,configurable:!0}),y.displayName=l(d,r,"GeneratorFunction"),a.isGeneratorFunction=function(n){var a="function"==typeof n&&n.constructor;return!!a&&(a===y||"GeneratorFunction"===(a.displayName||a.name))},a.mark=function(n){return Object.setPrototypeOf?Object.setPrototypeOf(n,d):(n.__proto__=d,l(n,r,"GeneratorFunction")),n.prototype=Object.create(w),n},a.awrap=function(n){return{__await:n}},b(j.prototype),l(j.prototype,u,(function(){return this})),a.AsyncIterator=j,a.async=function(n,s,t,p,o){void 0===o&&(o=Promise);var e=new j(i(n,s,t,p),o);return a.isGeneratorFunction(s)?e:e.next().then((function(n){return n.done?n.value:e.next()}))},b(w),l(w,r,"Generator"),l(w,e,(function(){return this})),l(w,"toString",(function(){return"[object Generator]"})),a.keys=function(n){var a=Object(n),s=[];for(var t in a)s.push(t);return s.reverse(),function n(){for(;s.length;){var t=s.pop();if(t in a)return n.value=t,n.done=!1,n}return n.done=!0,n}},a.values=F,O.prototype={constructor:O,reset:function(n){if(this.prev=0,this.next=0,this.sent=this._sent=void 0,this.done=!1,this.delegate=null,this.method="next",this.arg=void 0,this.tryEntries.forEach(x),!n)for(var a in this)"t"===a.charAt(0)&&t.call(this,a)&&!isNaN(+a.slice(1))&&(this[a]=void 0)},stop:function(){this.done=!0;var n=this.tryEntries[0].completion;if("throw"===n.type)throw n.arg;return this.rval},dispatchException:function(n){if(this.done)throw n;var a=this;function s(s,t){return e.type="throw",e.arg=n,a.next=s,t&&(a.method="next",a.arg=void 0),!!t}for(var p=this.tryEntries.length-1;p>=0;--p){var o=this.tryEntries[p],e=o.completion;if("root"===o.tryLoc)return s("end");if(o.tryLoc<=this.prev){var c=t.call(o,"catchLoc"),u=t.call(o,"finallyLoc");if(c&&u){if(this.prev<o.catchLoc)return s(o.catchLoc,!0);if(this.prev<o.finallyLoc)return s(o.finallyLoc)}else if(c){if(this.prev<o.catchLoc)return s(o.catchLoc,!0)}else{if(!u)throw new Error("try statement without catch or finally");if(this.prev<o.finallyLoc)return s(o.finallyLoc)}}}},abrupt:function(n,a){for(var s=this.tryEntries.length-1;s>=0;--s){var p=this.tryEntries[s];if(p.tryLoc<=this.prev&&t.call(p,"finallyLoc")&&this.prev<p.finallyLoc){var o=p;break}}o&&("break"===n||"continue"===n)&&o.tryLoc<=a&&a<=o.finallyLoc&&(o=null);var e=o?o.completion:{};return e.type=n,e.arg=a,o?(this.method="next",this.next=o.finallyLoc,f):this.complete(e)},complete:function(n,a){if("throw"===n.type)throw n.arg;return"break"===n.type||"continue"===n.type?this.next=n.arg:"return"===n.type?(this.rval=this.arg=n.arg,this.method="return",this.next="end"):"normal"===n.type&&a&&(this.next=a),f},finish:function(n){for(var a=this.tryEntries.length-1;a>=0;--a){var s=this.tryEntries[a];if(s.finallyLoc===n)return this.complete(s.completion,s.afterLoc),x(s),f}},catch:function(n){for(var a=this.tryEntries.length-1;a>=0;--a){var s=this.tryEntries[a];if(s.tryLoc===n){var t=s.completion;if("throw"===t.type){var p=t.arg;x(s)}return p}}throw new Error("illegal catch attempt")},delegateYield:function(n,a,s){return this.delegate={iterator:F(n),resultName:a,nextLoc:s},"next"===this.method&&(this.arg=void 0),f}},a}function u(n,a,s,t,p,o,e){try{var c=n[o](e),u=c.value}catch(n){return void s(n)}c.done?a(u):Promise.resolve(u).then(t,p)}function r(n,a){return function(n){if(Array.isArray(n))return n}(n)||function(n,a){var s=null==n?null:"undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"];if(null!=s){var t,p,o,e,c=[],u=!0,r=!1;try{if(o=(s=s.call(n)).next,0===a){if(Object(s)!==s)return;u=!1}else for(;!(u=(t=o.call(s)).done)&&(c.push(t.value),c.length!==a);u=!0);}catch(n){r=!0,p=n}finally{try{if(!u&&null!=s.return&&(e=s.return(),Object(e)!==e))return}finally{if(r)throw p}}return c}}(n,a)||function(n,a){if(!n)return;if("string"==typeof n)return l(n,a);var s=Object.prototype.toString.call(n).slice(8,-1);"Object"===s&&n.constructor&&(s=n.constructor.name);if("Map"===s||"Set"===s)return Array.from(n);if("Arguments"===s||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(s))return l(n,a)}(n,a)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function l(n,a){(null==a||a>n.length)&&(a=n.length);for(var s=0,t=new Array(a);s<a;s++)t[s]=n[s];return t}var i=o.Form.create({name:"basic-form"})((function(n){var s=n.form,e=r((0,a.useState)(),2),l=e[0],i=e[1];return a.default.createElement("div",{style:{position:"relative"}},a.default.createElement(t.BasicFormItems,{fieldName:"selectParams",form:s,dataSource:[["显示器",6,5e3],["主机",2,15e3]],maxCount:3,columns:[{type:"select",title:"电脑配件",showColon:!0,isSelectUniq:!0,required:!0,selectOptions:[{title:"显示器",value:"显示器"},{title:"主机",value:"主机"},{title:"键盘",value:"键盘"}]},{type:"input",title:"数量",required:!0},{type:"input",title:"价格",required:!0}]}),a.default.createElement(t.EmptyLine,{height:60}),a.default.createElement(o.Button,{type:"primary",onClick:function(){(0,n.form.validateFields)(function(){var n,a=(n=c().mark((function n(a,s){return c().wrap((function(n){for(;;)switch(n.prev=n.next){case 0:if(!a){n.next=2;break}return n.abrupt("return");case 2:i(JSON.stringify((0,p.processBasicFormItemsData)(s)));case 3:case"end":return n.stop()}}),n)})),function(){var a=this,s=arguments;return new Promise((function(t,p){var o=n.apply(a,s);function e(n){u(o,t,p,e,c,"next",n)}function c(n){u(o,t,p,e,c,"throw",n)}e(void 0)}))});return function(n,s){return a.apply(this,arguments)}}())}},"提交"),a.default.createElement(t.EmptyLine,null),l)}));return a.default.createElement(i,null)}}}}]);